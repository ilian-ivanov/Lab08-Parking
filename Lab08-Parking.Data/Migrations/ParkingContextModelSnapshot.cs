// <auto-generated />
using System;
using Lab08_Parking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab08_Parking.Data.Migrations
{
    [DbContext(typeof(ParkingContext))]
    partial class ParkingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Lab08_Parking.Data.Models.DiscountCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("ParkingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParkingId");

                    b.ToTable("DiscountCards");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Discount = (byte)10,
                            Name = "Silver",
                            ParkingId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Discount = (byte)15,
                            Name = "Gold",
                            ParkingId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Discount = (byte)20,
                            Name = "Platinum",
                            ParkingId = 1L
                        });
                });

            modelBuilder.Entity("Lab08_Parking.Data.Models.Parking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("DailyRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<byte>("DailyRateStartHour")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DailyRateStopHour")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("NightlyRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<byte>("Size")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Parkings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DailyRate = 3m,
                            DailyRateStartHour = (byte)8,
                            DailyRateStopHour = (byte)18,
                            NightlyRate = 2m,
                            Size = (byte)200
                        });
                });

            modelBuilder.Entity("Lab08_Parking.Data.Models.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("DiscountCardId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ParkingId")
                        .HasColumnType("bigint");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte>("Size")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("DiscountCardId");

                    b.HasIndex("ParkingId");

                    b.HasIndex("RegNumber")
                        .IsUnique();

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DiscountCardId = 1L,
                            EntryTime = new DateTime(2020, 12, 20, 21, 54, 32, 834, DateTimeKind.Local).AddTicks(211),
                            ParkingId = 1L,
                            RegNumber = "1111",
                            Size = (byte)1
                        },
                        new
                        {
                            Id = 2L,
                            DiscountCardId = 2L,
                            EntryTime = new DateTime(2020, 12, 20, 17, 54, 32, 836, DateTimeKind.Local).AddTicks(6023),
                            ParkingId = 1L,
                            RegNumber = "1112",
                            Size = (byte)2
                        },
                        new
                        {
                            Id = 3L,
                            DiscountCardId = 3L,
                            EntryTime = new DateTime(2020, 12, 20, 15, 54, 32, 836, DateTimeKind.Local).AddTicks(6052),
                            ParkingId = 1L,
                            RegNumber = "1113",
                            Size = (byte)4
                        },
                        new
                        {
                            Id = 4L,
                            DiscountCardId = 1L,
                            EntryTime = new DateTime(2020, 12, 20, 11, 54, 32, 836, DateTimeKind.Local).AddTicks(6056),
                            ParkingId = 1L,
                            RegNumber = "1114",
                            Size = (byte)1
                        },
                        new
                        {
                            Id = 5L,
                            DiscountCardId = 1L,
                            EntryTime = new DateTime(2020, 12, 20, 7, 54, 32, 836, DateTimeKind.Local).AddTicks(6059),
                            ParkingId = 1L,
                            RegNumber = "1115",
                            Size = (byte)2
                        },
                        new
                        {
                            Id = 6L,
                            DiscountCardId = 3L,
                            EntryTime = new DateTime(2020, 12, 19, 23, 54, 32, 836, DateTimeKind.Local).AddTicks(6061),
                            ParkingId = 1L,
                            RegNumber = "1116",
                            Size = (byte)4
                        },
                        new
                        {
                            Id = 7L,
                            EntryTime = new DateTime(2020, 12, 19, 11, 54, 32, 836, DateTimeKind.Local).AddTicks(6065),
                            ParkingId = 1L,
                            RegNumber = "1117",
                            Size = (byte)1
                        });
                });

            modelBuilder.Entity("Lab08_Parking.Data.Models.DiscountCard", b =>
                {
                    b.HasOne("Lab08_Parking.Data.Models.Parking", "Parking")
                        .WithMany("DiscountCards")
                        .HasForeignKey("ParkingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parking");
                });

            modelBuilder.Entity("Lab08_Parking.Data.Models.Vehicle", b =>
                {
                    b.HasOne("Lab08_Parking.Data.Models.DiscountCard", "DiscountCard")
                        .WithMany("Vehicles")
                        .HasForeignKey("DiscountCardId");

                    b.HasOne("Lab08_Parking.Data.Models.Parking", "Parking")
                        .WithMany("Vehicles")
                        .HasForeignKey("ParkingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountCard");

                    b.Navigation("Parking");
                });

            modelBuilder.Entity("Lab08_Parking.Data.Models.DiscountCard", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Lab08_Parking.Data.Models.Parking", b =>
                {
                    b.Navigation("DiscountCards");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
